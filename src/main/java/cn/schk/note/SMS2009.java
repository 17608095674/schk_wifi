package cn.schk.note;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-07-13T11:08:17.793+08:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "SMS2009",
                  wsdlLocation = "http://192.1.1.249/Scal.SMS2009.WebService/SMS2009.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class SMS2009 extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "SMS2009");
    public final static QName SMS2009Soap12 = new QName("http://tempuri.org/", "SMS2009Soap12");
    public final static QName SMS2009Soap = new QName("http://tempuri.org/", "SMS2009Soap");
    static {
        URL url = null;
        try {
            url = new URL("http://192.1.1.249/Scal.SMS2009.WebService/SMS2009.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SMS2009.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://192.1.1.249/Scal.SMS2009.WebService/SMS2009.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SMS2009(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SMS2009(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SMS2009() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SMS2009(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SMS2009(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SMS2009(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SMS2009Soap
     */
    @WebEndpoint(name = "SMS2009Soap12")
    public SMS2009Soap getSMS2009Soap12() {
        return super.getPort(SMS2009Soap12, SMS2009Soap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SMS2009Soap
     */
    @WebEndpoint(name = "SMS2009Soap12")
    public SMS2009Soap getSMS2009Soap12(WebServiceFeature... features) {
        return super.getPort(SMS2009Soap12, SMS2009Soap.class, features);
    }


    /**
     *
     * @return
     *     returns SMS2009Soap
     */
    @WebEndpoint(name = "SMS2009Soap")
    public SMS2009Soap getSMS2009Soap() {
        return super.getPort(SMS2009Soap, SMS2009Soap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SMS2009Soap
     */
    @WebEndpoint(name = "SMS2009Soap")
    public SMS2009Soap getSMS2009Soap(WebServiceFeature... features) {
        return super.getPort(SMS2009Soap, SMS2009Soap.class, features);
    }

}
